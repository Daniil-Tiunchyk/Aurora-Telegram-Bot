package org.example.services;

import org.example.models.UserInfo;
import org.example.repositories.UserInfoRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

@Service
public class UserInfoService {

    private final UserInfoRepository userInfoRepository;

    @Autowired
    public UserInfoService(UserInfoRepository userInfoRepository) {
        this.userInfoRepository = userInfoRepository;
    }

    public List<UserInfo> getAllUsers() {
        return userInfoRepository.findAll();
    }

    public Optional<UserInfo> getUserInfoByUserId(Long userId) {
        return userInfoRepository.findByUserId(userId);
    }

    public void saveUserInfo(UserInfo userInfo) {
        userInfoRepository.save(userInfo);
    }

    public void deleteUserInfo(Long userId) {
        userInfoRepository.findByUserId(userId).ifPresent(userInfoRepository::delete);
    }

    public void toggleVisibility(Long userId) {
        userInfoRepository.findByUserId(userId).ifPresent(userInfo -> {
            userInfo.setIsVisible(!userInfo.getIsVisible());
            userInfoRepository.save(userInfo);
        });
    }

    public String formatUserProfile(UserInfo userInfo, String contactInfo) {

        return String.format("""
                        %s
                        –í–æ–∑—Ä–∞—Å—Ç: %s

                        –ß—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ: %s
                        –§–∞–Ω-—Ñ–∞–∫—Ç: %s

                        –ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É –≤ Telegram ‚Äì %s
                        –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –Ω–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å –∏ –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è –æ –≤—Å—Ç—Ä–µ—á–µ —Å—Ä–∞–∑—É. –¢–∞–∫–∂–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø–µ—Ä–≤—ã–π —Ä–∞–∑ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ üíª 

                        –ü–æ—è–≤—è—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã ‚Äî –ø–∏—à–∏—Ç–µ –≤ support üòâ
                        """,
                userInfo.getName(),
                userInfo.getAge(),
                userInfo.getDiscussionTopic(),
                userInfo.getFunFact(),
                contactInfo
        );
    }
}
